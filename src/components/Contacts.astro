---

import { Icon } from "astro-icon/components";

import qr from "../assets/qr.svg"
import { Picture } from "astro:assets";

import { useStoryblokApi } from '@storyblok/astro'
import Image from "../partials/Image.astro";

const storyblokApi = useStoryblokApi()
const { data } = await storyblokApi.get('cdn/stories/config', {
  version: 'draft',
  resolve_links: 'url',
})
const contacts = data?.story?.content?.contacts
const qrCodes = data?.story?.content?.qrCodes

---

<section
  class="py-28"
>
  <div>
    <div class="container-wrapper px-4 text-gray-600 md:px-8">
      <div
        class="container-wrapper gap-12 justify-between lg:flex lg:max-w-none"
      >
        <div class="max-w-lg space-y-3">
          <h3 >
                Контакты
            </h3>
          <p>
            Контакты
          </p>
          <div>
            <ul class="mt-6 flex flex-wrap gap-x-10 gap-y-6 items-center">
              {
                contacts?.map((contact) => {
                  return (
                    <li class="flex items-center gap-x-3">
                      <a
                        href={`${contact.type}:${contact.value.replace(/\s/g, "")}`}
                        class="flex items-center gap-2"
                      >
                      <Icon name={contact.icon} class="w-6 h-6" />
                        {contact.value}
                      </a>
                    </li>
                  );
                })
              }
              <li class="flex items-center gap-x-6">
                {qrCodes?.map(image => <Image {image} />)}
              </li>
            </ul>
          </div>
        </div>
        <div class="flex-1 mt-12 sm:max-w-lg lg:max-w-md">
          <form name="contact" class="space-y-5"  name="contact" method="POST" data-netlify="true" data-message="message">
            <div>
              <label class="font-medium">Имя</label>
              <input
                type="text"
                required
                name="name"
                placeholder="Обязательное поле"
                class="w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:border-amber-500 shadow-sm rounded-lg"
              />
          </div>
          <div>
            <label class="font-medium">Телефон</label>
            <input
              type="text"
              required
              name="phone"
              placeholder="Обязательное поле"
              class="w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:border-amber-500 shadow-sm rounded-lg"
            />
          </div>
          <div>
            <label class="font-medium">Электронная почта</label>
            <input
              type="email"
              required
              name="email"
              placeholder="Обязательное поле"
              class="w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:border-amber-500 shadow-sm rounded-lg"
            />
          </div>
          <div>
            <label class="font-medium">Вопрос</label>
            <textarea
              name="question"
              required
              placeholder="Обязательное поле"
              class="w-full mt-2 h-36 px-3 py-2 resize-none appearance-none bg-transparent outline-none border focus:border-amber-500 shadow-sm rounded-lg"
            ></textarea>
          </div>
              <div class="my-2 text-lg" id="message"></div>
              <button
                  type="submit"
                class="w-full px-4 py-2 text-white font-medium !bg-amber-900 hover:bg-amber-800 active:bg-amber-950 rounded-lg duration-150"
              >
                Получить консультацию
              </button>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  const handleSubmit = (event) => {
  event.preventDefault();

  const myForm = event.target;
  const formData = new FormData(myForm);

  const message = document.getElementById(myForm.dataset.message)
  
  fetch("/", {
    method: "POST",
    headers: { "Content-Type": "application/x-www-form-urlencoded" },
    body: new URLSearchParams(formData).toString(),
  })
    .then(() => message.innerHTML = '<span class="text-green-500">Заявка отправлена!</span>')
    .catch((error) => message.innerHTML = '<span class="text-red-500">Заявка не отправлена!</span>');
};

document
  .querySelectorAll("form").forEach(form => form.addEventListener("submit", handleSubmit))
</script>